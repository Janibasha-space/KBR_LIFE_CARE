// Test script to verify invoice generation
// Run this to test if our invoice generation functions work

const testInvoiceGeneration = async () => {
  console.log('🧪 Testing invoice generation...');
  
  // Mock payment data
  const mockPaymentData = {
    id: 'test-payment-123',
    patientId: 'KBR-OP-2025-TEST',
    patientName: 'Test Patient',
    fullAmount: 1000,
    totalAmount: 1000,
    actualAmountPaid: 500,
    type: 'consultation',
    paymentMethod: 'cash',
    description: 'Test consultation payment',
    transactionId: 'TXN123456',
    status: 'partial',
    createdAt: new Date().toISOString()
  };

  // Test invoice generation logic
  const invoiceNumber = `INV-${Date.now()}`;
  const currentDate = new Date().toISOString().split('T')[0];

  const invoiceData = {
    invoiceNumber,
    patientId: mockPaymentData.patientId,
    patientName: mockPaymentData.patientName,
    issueDate: currentDate,
    dueDate: currentDate,
    totalAmount: mockPaymentData.actualAmountPaid,
    status: 'partial',
    paymentStatus: 'partial',
    description: mockPaymentData.description,
    serviceType: 'OP',
    items: [
      {
        name: mockPaymentData.description,
        description: `${mockPaymentData.type} - ${mockPaymentData.description}`,
        quantity: 1,
        amount: mockPaymentData.actualAmountPaid,
        unitPrice: mockPaymentData.actualAmountPaid,
        totalPrice: mockPaymentData.actualAmountPaid
      }
    ],
    isAutoGenerated: true,
    generatedFrom: 'payment',
    originalId: mockPaymentData.id,
    generatedAt: new Date().toISOString(),
    notes: `Auto-generated test invoice for payment ${mockPaymentData.id}`,
    terms: 'Thank you for choosing KBR Life Care',
    createdAt: new Date().toISOString(),
    updatedAt: new Date().toISOString()
  };

  console.log('📄 Generated invoice data:', JSON.stringify(invoiceData, null, 2));
  return invoiceData;
};

// Run the test
testInvoiceGeneration().then(invoice => {
  console.log('✅ Test completed successfully');
  console.log('📊 Invoice Number:', invoice.invoiceNumber);
}).catch(error => {
  console.error('❌ Test failed:', error);
});